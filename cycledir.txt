#include<iostream>
using namespace std;
bool visited[20],recstack[20];
int i,n,j,a[20][20];
bool cyclepresent(int node,bool visited[20],bool recstack[20],int a[20][20],int n)
{
visited[node]=true;
recstack[node]=true;
for(i=0;i<n;i++)
{
if(visited[i]==0 && cyclepresent(i,visited,recstack,a,n))
return true;
else if(recstack[i]==true)
return true;
}
recstack[node]=false;
return false;
}
bool iscycle(int a[20][20],int n)
{
for(i=0;i<n;i++)
visited[i]=false,recstack[i]=false;//initialization of both arrays
for(i=0;i<n;i++)
if(visited[i]==0)//if not visited then we will call the function
{
if(cyclepresent(i,visited,recstack,a,n))
return true;
}
return false;
}

int main()
{
cout<<"\nenter the number of vertices";
cin>>n;
cout<<"\nenter the graph of ";
for(i=0;i<n;i++)
{

for(j=0;j<n;j++)
{
cin>>a[i][j];
cout<<"\t";
}
}
if(iscycle(a,n))
cout<<"yes cycle detected";
else
cout<<"no cycle present";
return 0;
}
